{
  "hash": "accb3422d55974fcdd9430b3cd4afe87",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Script B: Experiment 1\"\nformat: html\n---\n\n\n\n## Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| echo: false\n#| warning: false\n#| error: false\n#| message: false\nlibrary(osfr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| echo: false\n#| warning: false\n#| error: false\n#| message: false\nlibrary(knitr)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(rstatix)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'rstatix'\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| echo: false\n#| warning: false\n#| error: false\n#| message: false\nlibrary(ggpubr)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/rp3650/Library/CloudStorage/GoogleDrive-robpetrosino@gmail.com/My Drive/Academics/projects/morphology/morphological-decomposition/sub-projects/frequency-effects/frequency-effect_masked-priming\n```\n\n\n:::\n:::\n\n\n\n## Materials\n\n\n\n::: {#tbl-words_exp1 .cell tbl-cap='Experiment 1. Descriptive statistics of the word item used. For both frequency databases, the word frequencies were converted to per-million count to ensure cross-comparison.'}\n\n```{.r .cell-code .hidden}\n#| warning: false\n#| error: false\n#| label: tbl-words_exp1\n#| tbl-cap: \"Experiment 1. Descriptive statistics of the word item used. For both frequency databases, the word frequencies were converted to per-million count to ensure cross-comparison.\"\n\nexp1_wordlists_folder <- \"../materials/experiment1/\"\n\nstimuli <- read.csv(paste0(exp1_wordlists_folder, \"frequency-effects_experiment1_stimuli.csv\"))\ndatabase <- read.csv(paste0(exp1_wordlists_folder, \"stim-database.csv\"))\n\nstimuli <- merge(stimuli, database, by='Word', all.x=T, all.y=F)\nstimuli <- stimuli[c(-559,-596),] #one word and one non-word were duplicated as being considered both non-words and words\n\nwords <- stimuli %>% filter(type != 'non-word') \nnonwords <- stimuli %>% filter(type == 'non-word')\n\nwords$freq.bin <- factor(words$freq.bin, levels = c(\"high\", \"mid\"))\nwords$type <- as.factor(words$type)\n\nwords %>% \n  filter(freq.bin != 'low') %>%\n  mutate(Freq_HAL.Pm = (Freq_HAL * (10^6) / (131*10^6))) %>% # CHECK IF THE TRANSFORM HERE IS CORRECT\n  mutate(freq.bin = fct_recode(freq.bin, low = \"mid\")) %>% \n  dplyr::group_by(freq.bin) %>%\n  dplyr::summarise(N = n(),\n            minFreq= min(Freq_HAL.Pm, na.rm = T), maxFreq=max(Freq_HAL.Pm, na.rm = T),\n            meanFreq = mean(Freq_HAL.Pm, na.rm = T), sdFreq = sd(Freq_HAL.Pm, na.rm = T),\n            minSUBFreq= min(SUBTLWF, na.rm = T), maxSUBFreq=max(SUBTLWF, na.rm = T),\n            meanSUBFreq = mean(SUBTLWF, na.rm = T), sdSUBFreq = sd(SUBTLWF, na.rm = T),\n            #meanRT=mean(as.numeric(I_Mean_RT), na.rm = T), sdRT=sd(as.numeric(I_Mean_RT), na.rm = T),\n            #meanLength = mean(Length, na.rm = T), sdLength=sd(Length, na.rm = T)\n            ) %>% \n  mutate(\n    across(-freq.bin, ~ if_else(.<1, round(., 2), round(.)))\n  ) %>% \n  gt() %>%\n  tab_spanner(\n    label = md(\"**HAL**\"), \n    columns = c(minFreq: sdFreq)\n  ) %>%\n  tab_spanner(\n    label = md(\"**SUBTLEX~US~**\"), \n    columns = c(minSUBFreq: sdSUBFreq)\n  ) %>%\n  cols_label(freq.bin = \"frequency\", \n             minFreq = \"min\", maxFreq = \"max\", meanFreq = \"mean\", sdFreq = \"SD\", \n             minSUBFreq = \"min\", maxSUBFreq = \"max\", meanSUBFreq = \"mean\", sdSUBFreq = \"SD\") %>%\n  gt_add_divider(columns=c(\"maxFreq\", \"maxSUBFreq\"), weight=px(1))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"kwqbmlhsxa\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kwqbmlhsxa table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kwqbmlhsxa thead, #kwqbmlhsxa tbody, #kwqbmlhsxa tfoot, #kwqbmlhsxa tr, #kwqbmlhsxa td, #kwqbmlhsxa th {\n  border-style: none;\n}\n\n#kwqbmlhsxa p {\n  margin: 0;\n  padding: 0;\n}\n\n#kwqbmlhsxa .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kwqbmlhsxa .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#kwqbmlhsxa .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#kwqbmlhsxa .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kwqbmlhsxa .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kwqbmlhsxa .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kwqbmlhsxa .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kwqbmlhsxa .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kwqbmlhsxa .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kwqbmlhsxa .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kwqbmlhsxa .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kwqbmlhsxa .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kwqbmlhsxa .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kwqbmlhsxa .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kwqbmlhsxa .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwqbmlhsxa .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kwqbmlhsxa .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kwqbmlhsxa .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kwqbmlhsxa .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwqbmlhsxa .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kwqbmlhsxa .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwqbmlhsxa .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#kwqbmlhsxa .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwqbmlhsxa .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kwqbmlhsxa .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kwqbmlhsxa .gt_left {\n  text-align: left;\n}\n\n#kwqbmlhsxa .gt_center {\n  text-align: center;\n}\n\n#kwqbmlhsxa .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kwqbmlhsxa .gt_font_normal {\n  font-weight: normal;\n}\n\n#kwqbmlhsxa .gt_font_bold {\n  font-weight: bold;\n}\n\n#kwqbmlhsxa .gt_font_italic {\n  font-style: italic;\n}\n\n#kwqbmlhsxa .gt_super {\n  font-size: 65%;\n}\n\n#kwqbmlhsxa .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kwqbmlhsxa .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kwqbmlhsxa .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kwqbmlhsxa .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kwqbmlhsxa .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kwqbmlhsxa .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kwqbmlhsxa .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"frequency\">frequency</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"N\">N</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"&lt;strong&gt;HAL&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>HAL</strong></span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"&lt;strong&gt;SUBTLEX&lt;sub&gt;US&lt;/sub&gt;&lt;/strong&gt;\">\n        <span class=\"gt_column_spanner\"><strong>SUBTLEX<sub>US</sub></strong></span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"min\">min</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\" scope=\"col\" id=\"max\">max</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SD\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"min\">min</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\" scope=\"col\" id=\"max\">max</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SD\">SD</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"freq.bin\" class=\"gt_row gt_center\">high</td>\n<td headers=\"N\" class=\"gt_row gt_right\">100</td>\n<td headers=\"minFreq\" class=\"gt_row gt_right\">169</td>\n<td headers=\"maxFreq\" class=\"gt_row gt_right\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\">1212</td>\n<td headers=\"meanFreq\" class=\"gt_row gt_right\">482</td>\n<td headers=\"sdFreq\" class=\"gt_row gt_right\">292</td>\n<td headers=\"minSUBFreq\" class=\"gt_row gt_right\">2.00</td>\n<td headers=\"maxSUBFreq\" class=\"gt_row gt_right\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\">1168</td>\n<td headers=\"meanSUBFreq\" class=\"gt_row gt_right\">129</td>\n<td headers=\"sdSUBFreq\" class=\"gt_row gt_right\">201</td></tr>\n    <tr><td headers=\"freq.bin\" class=\"gt_row gt_center\">low</td>\n<td headers=\"N\" class=\"gt_row gt_right\">100</td>\n<td headers=\"minFreq\" class=\"gt_row gt_right\">3</td>\n<td headers=\"maxFreq\" class=\"gt_row gt_right\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\">23</td>\n<td headers=\"meanFreq\" class=\"gt_row gt_right\">9</td>\n<td headers=\"sdFreq\" class=\"gt_row gt_right\">5</td>\n<td headers=\"minSUBFreq\" class=\"gt_row gt_right\">0.12</td>\n<td headers=\"maxSUBFreq\" class=\"gt_row gt_right\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: grey;\">13</td>\n<td headers=\"meanSUBFreq\" class=\"gt_row gt_right\">3</td>\n<td headers=\"sdSUBFreq\" class=\"gt_row gt_right\">3</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Data analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: exp1_raw-dataset\n#| warning: false\n#| error: false\n\n# load the raw data dataframe\nexp1_data_folder <- \"experiment1\"\nexp1_rawdata_filename <- \"experiment_1_preprocessed_data.csv\"\n\n## 02. check if the rawdata file exists. if not, download it from OSF.\nif (!file.exists(here(exp1_data_folder, exp1_rawdata_filename))) {\n  osf_retrieve_file(\"ej8dh\") |> \n    osf_download(path = here(exp1_data_folder),\n                 conflicts = \"overwrite\") \n}\n\n## 03. read the data into R.\nexp1_rawdata <- here(exp1_data_folder, exp1_rawdata_filename) |>\n  read.csv(na = c(\"\", \"NA\")) %>%\n  filter(condition_rec != 'low') %>% # deleting the low-low frequency bin\n  mutate(condition_rec = fct_recode(condition_rec, low = \"mid\"), # renaming the mid-frequency bin as low\n         primeTime = primeDuration - maskDuration) # calculating the actual SOA\n\nexp1_info <- list()\nexp1_info$intended_prime_duration <- 33\nexp1_info$prime_dur_lb <- 25\nexp1_info$prime_dur_ub <- 60\nexp1_info$rt_lb <- 200\nexp1_info$rt_ub <- 1800\nexp1_info$freq_conditions <- c(\"high\", \"low\", \"non-word\")\nexp1_info$n_recruited <- exp1_rawdata$Rec_Session_Id |>\n  unique() |>\n  length()\n\nexp1_rawdata.sub <- exp1_rawdata %>%\n  filter(!is.na(TimeMeasure_Mean) & !is.na(primeDuration) & !is.na(responseError))\n            \n\nexp1_info$summary <- with(\n  transform(exp1_rawdata.sub,\n    RT_inrange = ifelse(RT >= exp1_info$rt_lb & RT <= exp1_info$rt_ub, 1, 0),\n    Prime_inrange = ifelse((primeDuration - maskDuration) >= exp1_info$prime_dur_lb &\n                             (primeDuration - maskDuration) <= exp1_info$prime_dur_ub, 1, 0),\n    list = Group_Nr),\n  {\n    data.frame(aggregate(Start_Time ~ Rec_Session_Id + Crowdsourcing_SubjId, data=exp1_rawdata.sub, unique),\n               aggregate(End_Time_Local ~ Rec_Session_Id + Crowdsourcing_SubjId, data=exp1_rawdata.sub, unique),\n              aggregate(cbind(list, SelectedGender, SelectedAge, TimeMeasure_Mean, TimeMeasure_Std) ~ Rec_Session_Id + Crowdsourcing_SubjId, data=exp1_rawdata.sub, unique),\n      aggregate(cbind(responseError, RT_inrange, Prime_inrange) ~ Rec_Session_Id + Crowdsourcing_SubjId, mean, data=exp1_rawdata.sub)\n  )\n}\n)\n\nexp1_info$summary <- exp1_info$summary[, -grep(\"Rec_Session_Id.|Crowdsourcing_SubjId.\", colnames(exp1_info$summary))] # remove all extra aggregating columns (subj ID)\n\nexp1_info$summary$Duration <- interval(ymd_hms(exp1_info$summary$Start_Time), \n                                             ymd_hms(exp1_info$summary$End_Time_Local)) |>\n                                      lapply(function(interval_value) {interval_value/dminutes(1)}) |> \n                                           unlist()\n```\n:::\n\n\n\n### Step 1: subject and item performance \n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: exp1_performance\n#| message: false\n#| error: false\n#| warning: false\n\nexp1_step1_goodsubj <- exp1_info$summary |>\n  subset(responseError <= .3) \n\nexp1_step1_subj_remain <- exp1_step1_goodsubj |> nrow()\n\nexp1_step1_item.err <- exp1_rawdata.sub %>% group_by(condition_rec, target_rec) %>%\n  summarise(word.percent=mean(responseError)*100) %>% \n  filter(word.percent > 30)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'condition_rec'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_performance\n#| message: false\n#| error: false\n#| warning: false\n\nexp1_subj_filter_1 <- exp1_step1_goodsubj$Rec_Session_Id\nexp1_item_filter_1 <- exp1_step1_item.err$target_rec\n\nexp1_data_step1 <- exp1_rawdata.sub |>\n  subset(condition_rec %in% exp1_info$freq_conditions) |>\n  subset(Rec_Session_Id %in% exp1_subj_filter_1 & \n         !target_rec %in% exp1_item_filter_1)\n```\n:::\n\n\n\n### Step 2: prime durations\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: exp1_prime-durations\n#| message: false\n#| warning: false\n#| error: false\n\nexp1_summary.primeTime <- exp1_rawdata.sub %>% \n  summarise(meanPrimeTime = round(mean(primeTime), 2), \n            sdPrimeTime = round(sd(primeTime), 2))\n\nexp1_primeTimeRangeSummary <- exp1_rawdata.sub %>% \n  group_by(primeTime) %>%\n  mutate(range = ifelse(primeTime < exp1_info$prime_dur_lb, \"below\", \n                        ifelse(primeTime > exp1_info$prime_dur_ub, \"above\",\n                               \"in range\"))) %>% \n  group_by(range) %>% tally() %>% ungroup() %>%\n  mutate(range.percent = round((n*100)/nrow(exp1_rawdata.sub),2))\n\nexp1_data_step2 <- exp1_data_step1  |>\n  subset(primeTime >= exp1_info$prime_dur_lb & primeTime <= exp1_info$prime_dur_ub)\n\nexp1_step2_subj_remain <- exp1_data_step2$Rec_Session_Id |>\n  unique() |>\n  length()\n\nexp1_step2_trials_remain <- nrow(exp1_data_step2)\n```\n:::\n\n\n\n### Step 3: RT distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: exp1_RT-outliers\n#| message: false\n#| error: false\n#| warning: false\n\n# RT outliers \nexp1_data_step3 <- exp1_data_step2 |> \n  subset(RT >= exp1_info$rt_lb & RT <= exp1_info$rt_ub)\n\nexp1_step3_subj_remain <- exp1_data_step3$Rec_Session_Id |>\n  unique() |>\n  length()\n\nexp1_step3_trials_remain <- nrow(exp1_data_step3)\n\n# error trial removal\n\nexp1_data_step3b <- exp1_data_step3  |>\n  subset(responseError == 0)\n\nexp1_step3b_subj_remain <- exp1_data_step3b$Rec_Session_Id |>\n  unique() |>\n  length()\n\nexp1_step3b_trials_remain <- nrow(exp1_data_step3b)\n\n# remove subjects with less than 12 trials in at least one condition*primetype combination (half of the total number of items per combination)\nrt_data_labels <- c(\"Rec_Session_Id\", \"condition_rec\", \"primetype_rec\", \"RT\")\n\nexp1_subj_filter_2 <- exp1_data_step3b[, rt_data_labels] |>\n  aggregate(RT ~ ., FUN = length, drop = FALSE) |>\n  subset(RT < 12, select = Rec_Session_Id) |>\n  unique() |>\n  unlist()\n\nexp1_data_final <- exp1_data_step3b |>\n  subset(!(Rec_Session_Id %in% exp1_subj_filter_2))\n\nexp1_final_subj_remain <- exp1_data_final$Rec_Session_Id |>\n  unique() |> \n  length()\n  \nexp1_final_trials_remain <- nrow(exp1_data_final)\n```\n:::\n\n\n\n## Results\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\n# error rates averages\n### N.B.: to calculate error rates, will have to apply the 12-trial removal procedure after the RT removal procedure and without removing the error trials\nexp1_subj_filter_2_with.errors <- exp1_data_step3[, rt_data_labels] |> #exp1_data_step3 is the dataset after RT removal and before the error trial removal\n  aggregate(RT ~ ., FUN = length, drop = FALSE) |>\n  subset(RT < 12, select = Rec_Session_Id) |>\n  unique() |>\n  unlist()\n\nexp1_data_final_with.errors <- exp1_data_step3 |>\n  subset(!(Rec_Session_Id %in% exp1_subj_filter_2))\n\nexp1_error.rates <- exp1_data_final_with.errors %>%\n  mutate(primetype_rec = factor(primetype_rec, levels=c(\"unrelated\", \"related\")),\n         condition_rec = factor(condition_rec, levels=c(\"high\", \"low\", \"non-word\"))) %>%\n  group_by(condition_rec, primetype_rec, Rec_Session_Id) %>%\n  summarise(error.percent=mean(responseError)*100)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'condition_rec', 'primetype_rec'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\n# RT averages\nexp1_rt.avg_subj <- exp1_data_final %>% \n  group_by(Rec_Session_Id, condition_rec, primetype_rec) %>%\n  summarise(meanRT = mean(RT))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Rec_Session_Id', 'condition_rec'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\nexp1_rt_cor <- exp1_data_final %>% \n  group_by(Rec_Session_Id, condition_rec, primetype_rec) %>%\n  dplyr::summarise(meanRT=mean(RT)) %>%\n  select(Rec_Session_Id, condition_rec, primetype_rec, meanRT) %>% \n  pivot_wider(names_from='primetype_rec', values_from=c('meanRT')) %>%\n  group_by(condition_rec) %>%\n  summarise(cor=cor(unrelated, related))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Rec_Session_Id', 'condition_rec'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\n# RT + error averages (by subject)\nexp1_avgs_subj <- merge(exp1_rt.avg_subj, exp1_error.rates, by=c(\"Rec_Session_Id\", \"condition_rec\", \"primetype_rec\"))\n\nexp1_mop.err_across <- exp1_avgs_subj %>%\n  group_by(condition_rec, primetype_rec) %>%\n  summarise(gd.mean=mean(meanRT, na.rm=T), sd=sd(meanRT, na.rm=T), mean.error=mean(error.percent)) %>%\n  pivot_wider(id_cols=\"condition_rec\", names_from=primetype_rec, values_from=c(gd.mean, sd, mean.error)) %>%\n  left_join(exp1_rt_cor, by=\"condition_rec\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'condition_rec'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\n#### ERROR PRIMING CALCULATIONS ####\n# we will just run stats for this, no numerical calculations (e.g., priming)\n\n### MAIN EFFECTS\n#### t-test\nexp1_errors_stats_main <- exp1_error.rates %>% \n  group_by(condition_rec) %>%\n  t_test(error.percent ~ primetype_rec, paired=T)\n\n#### RT PRIMING CALCULATIONS ####\n\n### 2x2 ANOVA\nexp1_mop_anova <- exp1_rt.avg_subj |>\n  transform(Rec_Session_Id = factor(Rec_Session_Id)) |>\n  subset(condition_rec %in% c(\"high\", \"low\")) |>\n  aov(meanRT ~ condition_rec * primetype_rec + Error(Rec_Session_Id/(condition_rec * primetype_rec)), data = _)\n\n### MAIN EFFECTS\n#### by subject\nexp1_mop_subj <- exp1_rt.avg_subj %>% \n  pivot_wider(names_from=primetype_rec, values_from=meanRT) %>%\n  mutate(priming = unrelated-related)\n\n#### descriptive stats\nexp1_gdavg_mop <- exp1_mop_subj %>%\n  group_by(condition_rec) %>%\n  summarise(MOP = mean(priming), se = sd(priming)/sqrt(n()), ci=(qt(0.975, n()-1)*se),\n            sd=sd(priming), ES=round(MOP/sd, 2))\n\n#### summary table\nexp1_gdavg_mop_summary <- exp1_gdavg_mop %>%\n  left_join(., exp1_mop.err_across, by='condition_rec') %>%\n  mutate(across(c(2:5, 7:12), round), across(c(13), round, 2)) %>%\n  mutate(ci.lb = paste0(\"[\", MOP-ci), ci.ub = paste0(MOP+ci, \"]\")) %>%\n  unite(\"CI\", ci.lb:ci.ub, sep = \" \") %>% select(-ci, -se) %>% \n  rename(factor = \"condition_rec\") %>%\n  relocate(gd.mean_related:cor, .before=MOP) %>% \n  relocate(gd.mean_related, .after=gd.mean_unrelated) %>%\n  relocate(CI, .after=MOP)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(c(13), round, 2)`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: exp1_results\n#| message: false\n#| error: false\n#| warning: false\n\n#### t-test\nexp1_rt_stats_main <- exp1_rt.avg_subj %>%\n  mutate(primetype_rec = fct_relevel(primetype_rec, \"unrelated\", \"related\")) %>%\n  group_by(condition_rec) %>%\n  t_test(meanRT ~ primetype_rec, paired=T) %>% select(-2:-6) %>%\n  rename(factor = \"condition_rec\", t='statistic') %>%\n  mutate_if(is.numeric, list(~as.character(signif(., 3))))\n\n### INTERACTION EFFECT\n#### descriptive stats\nexp1_gdavg_fae <- exp1_mop_subj %>%\n  select(-unrelated, -related) %>%\n  pivot_wider(names_from=\"condition_rec\", values_from=\"priming\") %>%\n  mutate(interaction = low-high) %>% ungroup() %>%\n  summarise(factor = \"frequency:primetype\", \n            sd=sd(interaction), se = sd/sqrt(n()), ci = (qt(0.975, n()-1)*se)) %>%\n  mutate(across(c(2:4), round))\n\n##### summary table\nexp1_gdavg_fae_summary <- exp1_mop_subj %>% \n  select(-unrelated, -related) %>% ungroup() %>%\n  pivot_wider(names_from=\"condition_rec\", values_from=\"priming\") %>%\n  summarise(mean_high = round(mean(high)), mean_low = round(mean(low)), cor=round(cor(high, low), 3)) %>%\n  bind_cols(., exp1_gdavg_fae) %>%\n  mutate(MOP = mean_low-mean_high, ES = round(MOP/sd, 2), ci.lb = paste0(\"[\", MOP-ci), ci.ub = paste0(MOP+ci, \"]\")) %>%\n  unite(\"CI\", ci.lb:ci.ub, sep = \" \") %>% select(-ci, -se) %>% \n  relocate(CI, .after=MOP) %>%\n  relocate(factor, .before=mean_high)\n  \n#### t-test\nexp1_rt_stats_interaction <- exp1_mop_subj %>% ungroup() %>%\n  filter(condition_rec != 'non-word') %>%\n  mutate(condition_rec = fct_relevel(condition_rec, \"low\", \"high\")) %>%\n  t_test(priming ~ condition_rec, paired=TRUE) %>% \n  mutate_if(is.numeric, list(~as.character(signif(., 3)))) %>%\n  select(-1, -4:-5) %>%\n  unite(\"factor\", group1:group2) %>%\n  rename(t='statistic') %>%\n  mutate(factor = \"frequency:primetype\")\n```\n:::\n\n\n\n#### Stats summary\n\n\n\n::: {#tbl-statsResults .cell tbl-cap='Experiment 1. Summary of the word priming results. *Legend.* MOP: magnitude of priming.' tbl-pos='h'}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| error: false\n#| warning: false\n#| label: tbl-statsResults\n#| tbl-cap: \"Experiment 1. Summary of the word priming results. *Legend.* MOP: magnitude of priming.\"\n#| tbl-pos: 'h'\n\nexp1_summary.results_mop <- merge(exp1_gdavg_mop_summary, exp1_rt_stats_main, by='factor')\nexp1_summary.results_fae <- merge(exp1_gdavg_fae_summary, exp1_rt_stats_interaction, by='factor') |>\n  select(-mean_high, -mean_low)\n\nexp1_summary.results <- bind_rows(exp1_summary.results_mop, exp1_summary.results_fae)\n  \nexp1_summary.results %>%\n  relocate(c(\"sd_unrelated\", \"mean.error_unrelated\"), .before=gd.mean_related) %>%\n  gt() %>%\n  cols_label(\n    CI = \"95% CI\",\n    contains(\"mean\") ~ \"mean\",\n    contains(\"sd\") ~ \"SD\", \n    contains(\"error\") ~ \"Error (%)\"\n  ) %>%\n  tab_spanner(\n    label = \"unrelated RT\",\n    columns = c(2:4)\n  ) %>%\n  tab_spanner(\n    label = \"repetition RT\",\n    columns = c(5:7)\n  ) %>%\n  tab_spanner(\n    label = 'priming effects',\n    columns = c(9:12)\n  ) %>%\n  tab_spanner(\n    label = md(\"_t_-test\"),\n    columns = c(13:15)\n  ) %>%\n  cols_label(\n    sd = md(\"SD~p~\")\n  ) %>%\n  cols_label(\n    t = md(\"_t_\"),\n    p = md(\"_p_\"),\n  ) %>%\n   sub_missing(\n    missing_text = \" \"\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ktrhgjqhjt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ktrhgjqhjt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ktrhgjqhjt thead, #ktrhgjqhjt tbody, #ktrhgjqhjt tfoot, #ktrhgjqhjt tr, #ktrhgjqhjt td, #ktrhgjqhjt th {\n  border-style: none;\n}\n\n#ktrhgjqhjt p {\n  margin: 0;\n  padding: 0;\n}\n\n#ktrhgjqhjt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ktrhgjqhjt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ktrhgjqhjt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ktrhgjqhjt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ktrhgjqhjt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ktrhgjqhjt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ktrhgjqhjt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ktrhgjqhjt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ktrhgjqhjt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ktrhgjqhjt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ktrhgjqhjt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ktrhgjqhjt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ktrhgjqhjt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ktrhgjqhjt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ktrhgjqhjt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktrhgjqhjt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ktrhgjqhjt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ktrhgjqhjt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ktrhgjqhjt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktrhgjqhjt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ktrhgjqhjt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktrhgjqhjt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ktrhgjqhjt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktrhgjqhjt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ktrhgjqhjt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktrhgjqhjt .gt_left {\n  text-align: left;\n}\n\n#ktrhgjqhjt .gt_center {\n  text-align: center;\n}\n\n#ktrhgjqhjt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ktrhgjqhjt .gt_font_normal {\n  font-weight: normal;\n}\n\n#ktrhgjqhjt .gt_font_bold {\n  font-weight: bold;\n}\n\n#ktrhgjqhjt .gt_font_italic {\n  font-style: italic;\n}\n\n#ktrhgjqhjt .gt_super {\n  font-size: 65%;\n}\n\n#ktrhgjqhjt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ktrhgjqhjt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ktrhgjqhjt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ktrhgjqhjt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ktrhgjqhjt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ktrhgjqhjt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ktrhgjqhjt .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"factor\">factor</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"unrelated RT\">\n        <span class=\"gt_column_spanner\">unrelated RT</span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"repetition RT\">\n        <span class=\"gt_column_spanner\">repetition RT</span>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"cor\">cor</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"priming effects\">\n        <span class=\"gt_column_spanner\">priming effects</span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"&lt;em&gt;t&lt;/em&gt;-test\">\n        <span class=\"gt_column_spanner\"><em>t</em>-test</span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SD\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Error (%)\">Error (%)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"mean\">mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SD\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Error (%)\">Error (%)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"MOP\">MOP</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"95% CI\">95% CI</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"SD&lt;sub&gt;p&lt;/sub&gt;\">SD<sub>p</sub></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ES\">ES</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;em&gt;t&lt;/em&gt;\"><em>t</em></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"df\">df</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;em&gt;p&lt;/em&gt;\"><em>p</em></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"factor\" class=\"gt_row gt_left\">high</td>\n<td headers=\"gd.mean_unrelated\" class=\"gt_row gt_right\">619</td>\n<td headers=\"sd_unrelated\" class=\"gt_row gt_right\">77</td>\n<td headers=\"mean.error_unrelated\" class=\"gt_row gt_right\">2</td>\n<td headers=\"gd.mean_related\" class=\"gt_row gt_right\">596</td>\n<td headers=\"sd_related\" class=\"gt_row gt_right\">80</td>\n<td headers=\"mean.error_related\" class=\"gt_row gt_right\">1</td>\n<td headers=\"cor\" class=\"gt_row gt_right\">0.89</td>\n<td headers=\"MOP\" class=\"gt_row gt_right\">23</td>\n<td headers=\"CI\" class=\"gt_row gt_left\">[19 27]</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">37</td>\n<td headers=\"ES\" class=\"gt_row gt_right\">0.62</td>\n<td headers=\"t\" class=\"gt_row gt_right\">10.4</td>\n<td headers=\"df\" class=\"gt_row gt_right\">281</td>\n<td headers=\"p\" class=\"gt_row gt_left\">8.78e-22</td></tr>\n    <tr><td headers=\"factor\" class=\"gt_row gt_left\">low</td>\n<td headers=\"gd.mean_unrelated\" class=\"gt_row gt_right\">699</td>\n<td headers=\"sd_unrelated\" class=\"gt_row gt_right\">93</td>\n<td headers=\"mean.error_unrelated\" class=\"gt_row gt_right\">10</td>\n<td headers=\"gd.mean_related\" class=\"gt_row gt_right\">669</td>\n<td headers=\"sd_related\" class=\"gt_row gt_right\">91</td>\n<td headers=\"mean.error_related\" class=\"gt_row gt_right\">7</td>\n<td headers=\"cor\" class=\"gt_row gt_right\">0.84</td>\n<td headers=\"MOP\" class=\"gt_row gt_right\">30</td>\n<td headers=\"CI\" class=\"gt_row gt_left\">[24 36]</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">52</td>\n<td headers=\"ES\" class=\"gt_row gt_right\">0.58</td>\n<td headers=\"t\" class=\"gt_row gt_right\">9.75</td>\n<td headers=\"df\" class=\"gt_row gt_right\">281</td>\n<td headers=\"p\" class=\"gt_row gt_left\">1.51e-19</td></tr>\n    <tr><td headers=\"factor\" class=\"gt_row gt_left\">non-word</td>\n<td headers=\"gd.mean_unrelated\" class=\"gt_row gt_right\">712</td>\n<td headers=\"sd_unrelated\" class=\"gt_row gt_right\">110</td>\n<td headers=\"mean.error_unrelated\" class=\"gt_row gt_right\">6</td>\n<td headers=\"gd.mean_related\" class=\"gt_row gt_right\">716</td>\n<td headers=\"sd_related\" class=\"gt_row gt_right\">110</td>\n<td headers=\"mean.error_related\" class=\"gt_row gt_right\">6</td>\n<td headers=\"cor\" class=\"gt_row gt_right\">0.96</td>\n<td headers=\"MOP\" class=\"gt_row gt_right\">-4</td>\n<td headers=\"CI\" class=\"gt_row gt_left\">[-8 0]</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">31</td>\n<td headers=\"ES\" class=\"gt_row gt_right\">-0.11</td>\n<td headers=\"t\" class=\"gt_row gt_right\">-1.91</td>\n<td headers=\"df\" class=\"gt_row gt_right\">281</td>\n<td headers=\"p\" class=\"gt_row gt_left\">0.0567</td></tr>\n    <tr><td headers=\"factor\" class=\"gt_row gt_left\">frequency:primetype</td>\n<td headers=\"gd.mean_unrelated\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"sd_unrelated\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"mean.error_unrelated\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"gd.mean_related\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"sd_related\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"mean.error_related\" class=\"gt_row gt_right\"><br /></td>\n<td headers=\"cor\" class=\"gt_row gt_right\">-0.01</td>\n<td headers=\"MOP\" class=\"gt_row gt_right\">7</td>\n<td headers=\"CI\" class=\"gt_row gt_left\">[-1 15]</td>\n<td headers=\"sd\" class=\"gt_row gt_right\">64</td>\n<td headers=\"ES\" class=\"gt_row gt_right\">0.11</td>\n<td headers=\"t\" class=\"gt_row gt_right\">1.88</td>\n<td headers=\"df\" class=\"gt_row gt_right\">281</td>\n<td headers=\"p\" class=\"gt_row gt_left\">0.0616</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "experiment-1_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}